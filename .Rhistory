plot(cars, pch = 2)
data(mtcars)
play()
str(mtcars)
nxt()
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 11] <- 4
x
getwd()
read.csv("hw1_data.csv")
my_hw<- read.csv("hw1_data.csv")
str(my_hw)
names(my_hw)
head(my_hw,2)
nrow(my_hw)
tail(my_hw,2)
my_hw[47,"Ozone"]
my_hw[47]
my_hw[47,]
sum(is.na(my_hw["Ozone"]))
my_hw["Ozone"])
my_hw["Ozone"]
t(my_hw["Ozone"]0
t(my_hw["Ozone"])
sum(is.na(my_hw["Ozone"]))
mean(my_hw["Ozone"]), rm.na= T)
mean(my_hw["Ozone"], rm.na= T)
mean(my_hw["Ozone"], na.rm = T)
my_ozone <- my_hw["Ozone"]
my_ozone <- my_ozone[!is.na(my_ozone)]
my_ozone
mean(my_ozone)
?mean
x <- c(0:10, NA, 50)
mean(x, na.rm = T)
x
my_hw["Ozone"]
mean(as.vector(my_hw["Ozone"]), na.rm = T)
as.vector(my_hw["Ozone"])
as.vector(t(my_hw["Ozone"]))
mean(t(as.vector(my_hw["Ozone"])), na.rm = T)
mean(t(my_hw["Ozone"]), na.rm = T)
my_hw[Ozone>30]
my_hw["Ozone">30]
high_ot <- my_hw["Ozone">31 & "Temp">90]
high_ot
mean(t(high_ot["Solar.R"]), na.rm = T)
high_ot <- my_hw["Ozone">31 && "Temp">90]
swirl
swirl()
1:20
my_vector <- 1:20
my_vector
dim(my_c)
dim(my_vector)
length(mmy_hw)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix
matrix(1:20,4,5)
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
bye()
swirl()
bye()
swirl()
T == T
TRUE == TRUE
bye()
View(my_vector)
high_ot <- my_hw[my_hw$Ozone>31 && my_hw$Temp>90]
high_ot <- my_hw[my_hw$Ozone>31 & my_hw$Temp>90]
View(my_hw)
high_ot <- my_hw[my_hw$Ozone > 31 & my_hw$Temp > 90]
high_ot <- my_hw[my_hw$Ozone > 31 && my_hw$Temp > 90]
View(high_ot)
high_ot <- my_hw[my_hw$Ozone > 31]
high_ot <- my_hw[my_hw$Ozone > 31, ]
high_ot <- my_hw[my_hw$Ozone > 31 && my_hw$Temp > 90, ]
high_ot <- my_hw[my_hw$Ozone > 31, ]
high_ot
View(high_ot)
high_ot <- my_hw[my_hw$Ozone > 31 && my_hw$Temp > 90, ]
high_ot <- my_hw[my_hw$Ozone > 31, ]
high_ot <- high_ot[high_ot > 90, ]
mean(high_ot$Solar.R)
mean(high_ot$Solar.R, na.rm = T)
high_t <- my_hw[!is.na(my_hw$Ozone) & my_hw$Ozone > 31]
high_t <- my_hw[!is.na(my_hw$Ozone) & my_hw$Ozone > 31, ]
View(high_t)
high_ot <- high_t[high_t$Temp > 90]
high_ot <- high_t[high_t$Temp > 90, ]
mean(high_ot$Solar.R, na.rm = T)
View(high_ot)
high_t <- my_hw[my_hw$Ozone > 31, ]
View(high_t)
high_t <- my_hw[!is.na(my_hw$Ozone) & my_hw$Ozone > 31, ]
mean(my_hw$Temp[my_hw$Month==6],na.rm = T)
max(my_hw$Ozone[my_hw$Month==5], na.rm = T)
my_hw$Ozone[my_hw$Month==5]
my_hw[my_hw$Month==5, ]
length(my_hw$Ozone[my_hw$Month==5])
max(my_hw$Ozone[my_hw$Month==5], na.rm = T)
class(c(4, TRUE))
x <- c(1,3, 5)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
class(x[[1]])
x[[1]]
head(my_hw,2)
tail(my_hw,2)
my_hw$Ozone[47]
sum(is.na(my_hw$Ozone))
mean(my_hw$Ozone, na.rm = T)
mean(high_ot$Solar.R, na.rm = T)
my_hw <- read.csv("hw1_data.csv")
my_hw$Ozone[47]
sum(is.na(my_hw$Ozone))
high_t <- my_hw[my_hw$Ozone > 30 && !is.na(my_hw$Ozone), ]
View(high_t)
high_t <- my_hw[my_hw$Ozone > 30 & !is.na(my_hw$Ozone), ]
high_t <- my_hw[my_hw$Ozone > 31 & !is.na(my_hw$Ozone) & my_hw$Temp>90, ]
View(high_t)
mean(high_t$Solar.R)
mean(my_hw$Temp[my_hw$Month==6],na.rm = T)
max(my_hw$Ozone[my_hw$Month==5], na.rm = T)
library(swirl)
swirl()
swirl()
?InstallCourses
install_from_swirl("Getting_and_Cleaning_Data")
install_from_swirl("Exploratory_Data_Analysis")
swirl()
list.files()
head
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
low(ppm)
low
high
hist()
?hist
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg<- pollution$region
reg<- table(pollution$region)
reg
barplot(reg)
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(data = pollution, pm25~region, col = "red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
subset(pollution, region=="east")
subset(pollution,region=="east")
east<- subset(pollution,region=="east")
head(east)
hist(pm25, col = "green")
hist(east$pm25, col = "green")
hist(subset(pollution, region=="west"), col = "green")
hist(subset(pollution, region=="west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h=12)
abline(h=12, lwd =2, lty = 2)
plot(pollution$latitude, pollution$ppm, col = pollution$region)
plot(pollution$latitude, ppm, col = pollution$region)
abline(12)
abline(h=12, lwd=2, lty =2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west<- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
read.csv(path2csv,stringsAsFactors = FALSE)
myDF<- read.csv(path2csv,stringsAsFactors = FALSE)
mydf<- read.csv(path2csv,stringsAsFactors = FALSE)
rm(myDF)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
Use select(cran, r_arch:country)
Use select(cran, r_arch : country)
select(cran, r_arch : country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran,package=="swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran,country == "US" | country == "IN")
filter(cran,size>100500)
filter(cran,size>100500,r_os=="linux-gun")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2<- select(cran, size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<- select(cran,ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran,avg_bytes = mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
submit()
pack_sum
quantile
quantile(pack_sum$count, probs = .99)
top_counts<- filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted<- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
filter(top_unique,desc(unique))
arrange(top_unique,desc(unique))
arrange(top_unique, desc(unique))
top_unique_sorted<- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
?gather
res<- gather(students2,sex_class,count)
res<- gather(students2,sex_class,count,-grade)
res
?separate
quit()
?unzip
getwd()
dir
dir()
setwd(dir()[9])
dir
dir()
setwd("repdata")
dir()
setwd("project1")
dir
dir()
unzip("activity.zip")
dir()
dir()
rawdata <- read.csv("activity.csv")
dim(rawdata)
colnames(rawdata)
head(rawdata)
require(dplyr)
head(rawdata)
head(rawdata,20)
mean(is.na(rawdata[,1]))
rawdata[20:40,]
rawdata[40:60,]
rawdata[60:80,]
rawdata[100:120,]
rawdata[500:520,]
dim(rawdata)
class(rawdata$steps)
class(rawdata$date)
class(rawdata$interval)
rawdata$date <- rawdata$date %>%
as.character %>%
ymd
require(lubridate)
rawdata$date <- rawdata$date %>%
+ as.character %>%
+ ymd
rawdata$date <- rawdata$date %>%
+ as.character
0 %>% as.character()
rawdata <- read.csv("activity.csv", c("integer","character", "integer"))
rawdata <- read.csv("activity.csv", colClasses = c("integer","character", "integer"))
?function
()
()
help(function)
help("function")
sapply(rawdata, function(x) class(x))
rawdata$date <- rawdata$date %>% ymd()
sapply(rawdata, function(x) class(x))
rawdata[400:420,]
tail(rawdata)
?select
?group_by
require(dplyr)
group_by(rawdata,date
)
group_by(rawdata,date) %>% summarize()
group_by(rawdata,date) %>% summarize(mean(steps, na.rm = TRUE))
which(rawdata$date == ymd("2012-10-02"))
576-288
288*5
head(rawd)
head(rawdata)
60*60*24
60*60*24/288
60*24
60*24/5
processed<- mutate(rawdata,steady.interval = interval % 289)
processed<- mutate(rawdata,steady.interval = interval %% 289)
head(processed)
tail(processed)
5%%2
20%%10
help("%")
??%
?help
??help
?help
?mod
processed<- mutate(rawdata,steady.interval = interval %% 1445)
tail(processed)
processed[280:290,]
2360/289
5*288
rm(processed)
rawdata[280:290,]
rawdata[285:295,]
5*289
289*2
rawdata[575:585,]
2355-0 %>% ./289
2355/288
group_by(rawdata, interval) %>% summarize(mean(steps, na.rm= T))
group_by(rawdata, interval) %>% summarize(mean(steps, na.rm= T)) %>% dim
intAvg <- group_by(rawdata, interval) %>% summarize(mean(steps, na.rm= T))
dayAvg <- group_by(rawdata, date) %>% summarize(avg_steps = (mean(steps, na.rm= T))
)
head(dayAvg
)
intAvg <- group_by(rawdata, interval) %>% summarize(avg_steps = mean(steps, na.rm= T))
head(intAvg)
24*60
/5
24*60/5
dim(dayAvg)
hm(5)
m(5)
hm(2355)
hm(23:55)
hm("23:55")
hm("5")
hm("05")
length("abec")
nchar("abec")
hm("23:55")%>% class
?hist
str(rawdata)
dayAvg %>% head
barplot(dayAvg$avg_steps)
dayAvg$date %>% length()
dayAvg$avg_steps %>% length()
?barplot
intAvg %>% head
intAvg$avg_steps
intAvg$interval
?pad
?sprintf
sprintf("%05s", "123")
sprintf("%05s", 123)
sprintf("%05d", 123)
sprintf("%05d", c(1,12,123,12345))
hm("1255")
?strsplit
gsub('^([0-9]{2})([0-9]+)$','\\1:\\2',"1234")
?sprintf
head(rawdata)
?qplot
library(ggplot2)
?qplot
?ggplot
?aes
23+55/60
head(rawdata)
sapply(rawdata, function(x) print(x)) %>% head
sapply(rawdata, function(x) {print(x)}) %>% head
int
intAvg%>%%head()
intAvg%>%head()
a <- c(0,1,NA)
a
head(rawdata)
a <- c(NA,1,0)
if (a[1] %>% is.na) a[1] <- intAvg[ a[3] == intAvg$interval,2]
a
a
intAvg
head(intAvg)
head(rawdata)
head(rawdata%>% as.list())
head(intAvg)
head(rawdata[3])
which (intAvg$interval == 0)
a<- cbind(1:5,sample(letters,5))
a
a<- cbind(1:5,sample(letters,5)) %>% as.data.frame()
a
b<- cbind(1:5*2-1,sample(letters,5)) %>% as.data.frame()
b
join(a, b, by= V1)
require(plyr)
join(a, b, by= V1)
join(a, b, by= 'V1')
join(a, b, by= 'V1') -> c
c
c$V2
colnames(c)<- c('number',,'best','worst')
colnames(c)<- c('number','best','worst')
c
which(c$worst %>% is.na())
which(c$worst %>% is.na()) -> sel
which(c$worst %>% is.na()) %>% c$worst[.] <- c$best[.]
c$worst[sel] <- c$best[sel]
sel
for (i in c$worst) {if (is.na(c$worst[i])) c$worst[i] == c$best[i]}
for (i in c$worst) {if (is.na(c$worst[i])) c$worst[i] <- c$best[i]}
class(c)
dim(c)
for (i in seq_along(c$worst)) {if (is.na(c$worst[i])) c$worst[i] <- c$best[i]}
c$worst <- as.character(c$worst)
for (i in seq_along(c$worst)) {if (is.na(c$worst[i])) c$worst[i] <- c$best[i]}
c
c$worst[2] <- NA
c$worst[4] <- NA
c
which(is.na(c$worst))
c$best[2]
c$best <- as.character(c$best)
c$best[2]
for (i in seq_along(c$worst)) {if (is.na(c$worst[i])) c$worst[i] <- c$best[i]}
c
library(dplyr)
?
merge
install.packages("addnewdata")
?order_by
?arrange
?mutate
rm(a,b,c)
rm(sel,i)
rawdata$date %>% class
weekdays(rawdata$date)
head(rawdata$date)
?summarize
summarize_each()
?summarize_each
?summarize
x<- 1:4
n(x)
?n
mtcars %>% group_by(cyl)
mtcars %>% group_by(cyl) %>% summarize(a=n(), b=a+1)
